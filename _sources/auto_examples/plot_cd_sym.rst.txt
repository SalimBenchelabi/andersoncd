
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.001002 
    elapsed time: 0.626372 
    elapsed time: 0.916132 
    elapsed time: 1.185052 
    elapsed time: 1.481066 
    elapsed time: 1.754814 
    elapsed time: 2.025787 
    elapsed time: 2.296093 
    elapsed time: 2.605435 
    elapsed time: 2.901613 
    elapsed time: 3.182090 
    elapsed time: 3.460459 
    elapsed time: 3.766093 
    elapsed time: 4.073076 
    elapsed time: 4.343218 
    elapsed time: 4.602685 
    elapsed time: 4.869898 
    elapsed time: 5.209798 
    elapsed time: 5.515966 
    elapsed time: 5.785715 
    elapsed time: 6.098668 
    elapsed time: 6.371092 
    elapsed time: 6.655422 
    elapsed time: 6.930688 
    elapsed time: 7.222820 
    elapsed time: 7.498384 
    elapsed time: 7.768138 
    elapsed time: 8.032173 
    elapsed time: 8.309706 
    elapsed time: 8.600254 
    elapsed time: 8.868666 
    elapsed time: 9.180611 
    elapsed time: 9.473800 
    elapsed time: 9.764407 
    elapsed time: 10.028999 
    elapsed time: 10.312778 
    elapsed time: 10.603703 
    elapsed time: 10.896512 
    elapsed time: 11.212716 
    elapsed time: 11.492948 
    elapsed time: 11.770109 
    elapsed time: 12.047262 
    elapsed time: 12.328176 
    elapsed time: 12.620465 
    elapsed time: 12.893219 
    elapsed time: 13.202747 
    elapsed time: 13.510641 
    elapsed time: 13.788332 
    elapsed time: 14.148535 
    elapsed time: 14.444684 
    elapsed time: 14.784539 
    elapsed time: 15.052060 
    elapsed time: 15.335327 
    elapsed time: 15.634126 
    elapsed time: 15.899039 
    elapsed time: 16.188066 
    elapsed time: 16.457937 
    elapsed time: 16.800476 
    elapsed time: 17.074827 
    elapsed time: 17.341050 
    elapsed time: 17.646384 
    elapsed time: 17.914581 
    elapsed time: 18.239955 
    elapsed time: 18.524563 
    elapsed time: 18.837633 
    elapsed time: 19.121728 
    elapsed time: 19.399441 
    elapsed time: 19.678007 
    elapsed time: 19.948140 
    elapsed time: 20.227825 
    Running CD - Anderson
    elapsed time: 0.000681 
    elapsed time: 0.322109 
    elapsed time: 0.624717 
    elapsed time: 0.960482 
    elapsed time: 1.243077 
    elapsed time: 1.572794 
    elapsed time: 1.931284 
    elapsed time: 2.201072 
    elapsed time: 2.517203 
    elapsed time: 2.833773 
    elapsed time: 3.119476 
    elapsed time: 3.429032 
    elapsed time: 3.776840 
    elapsed time: 4.084737 
    elapsed time: 4.377213 
    elapsed time: 4.672076 
    elapsed time: 5.013152 
    elapsed time: 5.334688 
    elapsed time: 5.647333 
    elapsed time: 5.977515 
    elapsed time: 6.318914 
    elapsed time: 6.609919 
    elapsed time: 6.880613 
    elapsed time: 7.173035 
    elapsed time: 7.475648 
    elapsed time: 7.792837 
    elapsed time: 8.101635 
    elapsed time: 8.416782 
    elapsed time: 8.726007 
    elapsed time: 9.003531 
    elapsed time: 9.315696 
    elapsed time: 9.665094 
    elapsed time: 9.954663 
    elapsed time: 10.282836 
    elapsed time: 10.571058 
    elapsed time: 10.899402 
    elapsed time: 11.221042 
    elapsed time: 11.517601 
    elapsed time: 11.790154 
    elapsed time: 12.063888 
    elapsed time: 12.380774 
    elapsed time: 12.667862 
    elapsed time: 12.957375 
    elapsed time: 13.228868 
    elapsed time: 13.511650 
    elapsed time: 13.818649 
    elapsed time: 14.094812 
    elapsed time: 14.442488 
    elapsed time: 14.786033 
    elapsed time: 15.089083 
    elapsed time: 15.375977 
    elapsed time: 15.675196 
    elapsed time: 15.965113 
    elapsed time: 16.270177 
    elapsed time: 16.543648 
    elapsed time: 16.810704 
    elapsed time: 17.148939 
    elapsed time: 17.451729 
    elapsed time: 17.727586 
    elapsed time: 18.006346 
    elapsed time: 18.327262 
    elapsed time: 18.612419 
    elapsed time: 18.934359 
    elapsed time: 19.270391 
    elapsed time: 19.561108 
    elapsed time: 19.856368 
    elapsed time: 20.148781 
    Running CD sym
    elapsed time: 0.000803 
    elapsed time: 0.581880 
    elapsed time: 1.142861 
    elapsed time: 1.722130 
    elapsed time: 2.274867 
    elapsed time: 2.820407 
    elapsed time: 3.395855 
    elapsed time: 3.970303 
    elapsed time: 4.544327 
    elapsed time: 5.113689 
    elapsed time: 5.632714 
    elapsed time: 6.146221 
    elapsed time: 6.676148 
    elapsed time: 7.214908 
    elapsed time: 7.777529 
    elapsed time: 8.362613 
    elapsed time: 8.962749 
    elapsed time: 9.518765 
    elapsed time: 10.084022 
    elapsed time: 10.642921 
    elapsed time: 11.230459 
    elapsed time: 11.796819 
    elapsed time: 12.390156 
    elapsed time: 12.934472 
    elapsed time: 13.496688 
    elapsed time: 14.129064 
    elapsed time: 14.716259 
    elapsed time: 15.403687 
    elapsed time: 15.969850 
    elapsed time: 16.584477 
    elapsed time: 17.173462 
    elapsed time: 17.755283 
    elapsed time: 18.380842 
    elapsed time: 18.973851 
    elapsed time: 19.657475 
    elapsed time: 20.320538 
    Running CD sym - Anderson
    elapsed time: 0.000688 
    elapsed time: 0.606418 
    elapsed time: 1.229246 
    elapsed time: 1.811991 
    elapsed time: 2.390765 
    elapsed time: 2.978995 
    elapsed time: 3.674343 
    elapsed time: 4.282069 
    elapsed time: 4.921721 
    elapsed time: 5.519780 
    elapsed time: 6.186812 
    elapsed time: 6.776372 
    elapsed time: 7.389712 
    elapsed time: 7.960880 
    elapsed time: 8.553407 
    elapsed time: 9.139732 
    elapsed time: 9.761022 
    elapsed time: 10.360064 
    elapsed time: 10.924927 
    elapsed time: 11.484919 
    elapsed time: 12.072160 
    elapsed time: 12.619695 
    elapsed time: 13.219161 
    elapsed time: 13.768317 
    elapsed time: 14.372075 
    elapsed time: 15.014461 
    elapsed time: 15.611677 
    elapsed time: 16.210059 
    elapsed time: 16.799808 
    elapsed time: 17.377452 
    elapsed time: 18.101987 
    elapsed time: 18.713900 
    elapsed time: 19.331801 
    elapsed time: 19.977812 
    elapsed time: 20.610486 
    Running RCD
    elapsed time: 0.000915 
    elapsed time: 0.288421 
    elapsed time: 0.569169 
    elapsed time: 0.870939 
    elapsed time: 1.155769 
    elapsed time: 1.502491 
    elapsed time: 1.807595 
    elapsed time: 2.092886 
    elapsed time: 2.421488 
    elapsed time: 2.701859 
    elapsed time: 3.011981 
    elapsed time: 3.319844 
    elapsed time: 3.610618 
    elapsed time: 3.903447 
    elapsed time: 4.173160 
    elapsed time: 4.495170 
    elapsed time: 4.776582 
    elapsed time: 5.048745 
    elapsed time: 5.345239 
    elapsed time: 5.636812 
    elapsed time: 5.914947 
    elapsed time: 6.196258 
    elapsed time: 6.476030 
    elapsed time: 6.756850 
    elapsed time: 7.028403 
    elapsed time: 7.313668 
    elapsed time: 7.617237 
    elapsed time: 7.929810 
    elapsed time: 8.233572 
    elapsed time: 8.557811 
    elapsed time: 8.848068 
    elapsed time: 9.125563 
    elapsed time: 9.423490 
    elapsed time: 9.710996 
    elapsed time: 10.062915 
    elapsed time: 10.366627 
    elapsed time: 10.693552 
    elapsed time: 11.087391 
    elapsed time: 11.391795 
    elapsed time: 11.703631 
    elapsed time: 12.005260 
    elapsed time: 12.315246 
    elapsed time: 12.626404 
    elapsed time: 12.898270 
    elapsed time: 13.179882 
    elapsed time: 13.491873 
    elapsed time: 13.787180 
    elapsed time: 14.080400 
    elapsed time: 14.371261 
    elapsed time: 14.680513 
    elapsed time: 14.978923 
    elapsed time: 15.292208 
    elapsed time: 15.590806 
    elapsed time: 15.873212 
    elapsed time: 16.164442 
    elapsed time: 16.447372 
    elapsed time: 16.778978 
    elapsed time: 17.097233 
    elapsed time: 17.433652 
    elapsed time: 17.798115 
    elapsed time: 18.121992 
    elapsed time: 18.407690 
    elapsed time: 18.712498 
    elapsed time: 19.012060 
    elapsed time: 19.326280 
    elapsed time: 19.625993 
    elapsed time: 19.899772 
    elapsed time: 20.185862 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  11.425 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
