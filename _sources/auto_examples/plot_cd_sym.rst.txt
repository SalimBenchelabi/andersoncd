
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.000657 
    elapsed time: 0.522264 
    elapsed time: 0.793244 
    elapsed time: 1.062737 
    elapsed time: 1.331024 
    elapsed time: 1.601906 
    elapsed time: 1.871327 
    elapsed time: 2.139729 
    elapsed time: 2.408823 
    elapsed time: 2.677462 
    elapsed time: 2.945557 
    elapsed time: 3.213725 
    elapsed time: 3.484024 
    elapsed time: 3.751929 
    elapsed time: 4.020490 
    elapsed time: 4.289929 
    elapsed time: 4.558324 
    elapsed time: 4.826141 
    elapsed time: 5.095243 
    elapsed time: 5.363853 
    elapsed time: 5.632489 
    elapsed time: 5.901777 
    elapsed time: 6.169885 
    elapsed time: 6.437529 
    elapsed time: 6.707353 
    elapsed time: 6.976518 
    elapsed time: 7.244191 
    elapsed time: 7.512683 
    elapsed time: 7.781161 
    elapsed time: 8.048905 
    elapsed time: 8.318854 
    elapsed time: 8.588666 
    elapsed time: 8.857308 
    elapsed time: 9.125749 
    elapsed time: 9.395580 
    elapsed time: 9.664589 
    elapsed time: 9.932480 
    elapsed time: 10.201407 
    elapsed time: 10.469898 
    elapsed time: 10.737031 
    elapsed time: 11.006178 
    elapsed time: 11.274848 
    elapsed time: 11.543051 
    elapsed time: 11.811278 
    elapsed time: 12.079968 
    elapsed time: 12.347607 
    elapsed time: 12.616282 
    elapsed time: 12.885186 
    elapsed time: 13.153152 
    elapsed time: 13.421159 
    elapsed time: 13.690527 
    elapsed time: 13.959217 
    elapsed time: 14.226528 
    elapsed time: 14.495508 
    elapsed time: 14.763180 
    elapsed time: 15.031520 
    elapsed time: 15.300541 
    elapsed time: 15.569043 
    elapsed time: 15.836692 
    elapsed time: 16.105454 
    elapsed time: 16.373930 
    elapsed time: 16.641133 
    elapsed time: 16.910754 
    elapsed time: 17.179578 
    elapsed time: 17.447016 
    elapsed time: 17.714870 
    elapsed time: 17.983754 
    elapsed time: 18.250511 
    elapsed time: 18.518917 
    elapsed time: 18.788110 
    elapsed time: 19.055973 
    elapsed time: 19.323572 
    elapsed time: 19.593084 
    elapsed time: 19.861887 
    elapsed time: 20.129733 
    Running CD - Anderson
    elapsed time: 0.000660 
    elapsed time: 0.277898 
    elapsed time: 0.555072 
    elapsed time: 0.832928 
    elapsed time: 1.106172 
    elapsed time: 1.384848 
    elapsed time: 1.662263 
    elapsed time: 1.934011 
    elapsed time: 2.212456 
    elapsed time: 2.489923 
    elapsed time: 2.763686 
    elapsed time: 3.040602 
    elapsed time: 3.318474 
    elapsed time: 3.592554 
    elapsed time: 3.870386 
    elapsed time: 4.148195 
    elapsed time: 4.421640 
    elapsed time: 4.700443 
    elapsed time: 4.978407 
    elapsed time: 5.251343 
    elapsed time: 5.532094 
    elapsed time: 5.830704 
    elapsed time: 6.105691 
    elapsed time: 6.384448 
    elapsed time: 6.662292 
    elapsed time: 6.936358 
    elapsed time: 7.216168 
    elapsed time: 7.496788 
    elapsed time: 7.773833 
    elapsed time: 8.071478 
    elapsed time: 8.356772 
    elapsed time: 8.630513 
    elapsed time: 8.909603 
    elapsed time: 9.211165 
    elapsed time: 9.519909 
    elapsed time: 9.798965 
    elapsed time: 10.077822 
    elapsed time: 10.352137 
    elapsed time: 10.632177 
    elapsed time: 10.917302 
    elapsed time: 11.209016 
    elapsed time: 11.493336 
    elapsed time: 11.773370 
    elapsed time: 12.051900 
    elapsed time: 12.331487 
    elapsed time: 12.610692 
    elapsed time: 12.907238 
    elapsed time: 13.188872 
    elapsed time: 13.467916 
    elapsed time: 13.763226 
    elapsed time: 14.043189 
    elapsed time: 14.342388 
    elapsed time: 14.632453 
    elapsed time: 14.924517 
    elapsed time: 15.204854 
    elapsed time: 15.483739 
    elapsed time: 15.765829 
    elapsed time: 16.056446 
    elapsed time: 16.352817 
    elapsed time: 16.631907 
    elapsed time: 16.912115 
    elapsed time: 17.211453 
    elapsed time: 17.491324 
    elapsed time: 17.771653 
    elapsed time: 18.046897 
    elapsed time: 18.327207 
    elapsed time: 18.607709 
    elapsed time: 18.883657 
    elapsed time: 19.162017 
    elapsed time: 19.468947 
    elapsed time: 19.779950 
    elapsed time: 20.106336 
    Running CD sym
    elapsed time: 0.000701 
    elapsed time: 0.555881 
    elapsed time: 1.098321 
    elapsed time: 1.642574 
    elapsed time: 2.196465 
    elapsed time: 2.790058 
    elapsed time: 3.372391 
    elapsed time: 3.921809 
    elapsed time: 4.463544 
    elapsed time: 5.005433 
    elapsed time: 5.548172 
    elapsed time: 6.089717 
    elapsed time: 6.726863 
    elapsed time: 7.385659 
    elapsed time: 8.056299 
    elapsed time: 8.707150 
    elapsed time: 9.250526 
    elapsed time: 9.794563 
    elapsed time: 10.394228 
    elapsed time: 10.961558 
    elapsed time: 11.501520 
    elapsed time: 12.043555 
    elapsed time: 12.583774 
    elapsed time: 13.126296 
    elapsed time: 13.687891 
    elapsed time: 14.238397 
    elapsed time: 14.789587 
    elapsed time: 15.331743 
    elapsed time: 15.948353 
    elapsed time: 16.497433 
    elapsed time: 17.037664 
    elapsed time: 17.579433 
    elapsed time: 18.119535 
    elapsed time: 18.662007 
    elapsed time: 19.200916 
    elapsed time: 19.795868 
    elapsed time: 20.337084 
    Running CD sym - Anderson
    elapsed time: 0.000680 
    elapsed time: 0.550220 
    elapsed time: 1.100993 
    elapsed time: 1.651548 
    elapsed time: 2.197220 
    elapsed time: 2.746952 
    elapsed time: 3.298962 
    elapsed time: 3.847012 
    elapsed time: 4.399457 
    elapsed time: 4.981664 
    elapsed time: 5.571942 
    elapsed time: 6.168459 
    elapsed time: 6.765258 
    elapsed time: 7.354235 
    elapsed time: 7.981307 
    elapsed time: 8.574214 
    elapsed time: 9.163177 
    elapsed time: 9.755362 
    elapsed time: 10.347060 
    elapsed time: 10.928217 
    elapsed time: 11.519703 
    elapsed time: 12.109773 
    elapsed time: 12.695334 
    elapsed time: 13.287589 
    elapsed time: 13.879206 
    elapsed time: 14.466535 
    elapsed time: 15.057728 
    elapsed time: 15.651052 
    elapsed time: 16.234012 
    elapsed time: 16.821689 
    elapsed time: 17.412127 
    elapsed time: 17.998796 
    elapsed time: 18.591415 
    elapsed time: 19.208712 
    elapsed time: 19.847802 
    elapsed time: 20.486111 
    Running RCD
    elapsed time: 0.000690 
    elapsed time: 0.337222 
    elapsed time: 0.660002 
    elapsed time: 0.979228 
    elapsed time: 1.299276 
    elapsed time: 1.623500 
    elapsed time: 1.944531 
    elapsed time: 2.260160 
    elapsed time: 2.575244 
    elapsed time: 2.888931 
    elapsed time: 3.219577 
    elapsed time: 3.539577 
    elapsed time: 3.851947 
    elapsed time: 4.170604 
    elapsed time: 4.487994 
    elapsed time: 4.810918 
    elapsed time: 5.141701 
    elapsed time: 5.460189 
    elapsed time: 5.782409 
    elapsed time: 6.096374 
    elapsed time: 6.414035 
    elapsed time: 6.743014 
    elapsed time: 7.059417 
    elapsed time: 7.371572 
    elapsed time: 7.682726 
    elapsed time: 7.999957 
    elapsed time: 8.326856 
    elapsed time: 8.647739 
    elapsed time: 8.963289 
    elapsed time: 9.286008 
    elapsed time: 9.604372 
    elapsed time: 9.930782 
    elapsed time: 10.252481 
    elapsed time: 10.572555 
    elapsed time: 10.889677 
    elapsed time: 11.199806 
    elapsed time: 11.524015 
    elapsed time: 11.841048 
    elapsed time: 12.156648 
    elapsed time: 12.473873 
    elapsed time: 12.796000 
    elapsed time: 13.119965 
    elapsed time: 13.443371 
    elapsed time: 13.769033 
    elapsed time: 14.087041 
    elapsed time: 14.401521 
    elapsed time: 14.737949 
    elapsed time: 15.063209 
    elapsed time: 15.374243 
    elapsed time: 15.691884 
    elapsed time: 16.007255 
    elapsed time: 16.335543 
    elapsed time: 16.647392 
    elapsed time: 16.966098 
    elapsed time: 17.283444 
    elapsed time: 17.603626 
    elapsed time: 17.937830 
    elapsed time: 18.257304 
    elapsed time: 18.569850 
    elapsed time: 18.886942 
    elapsed time: 19.198127 
    elapsed time: 19.507728 
    elapsed time: 19.837376 
    elapsed time: 20.156302 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  8.903 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
