
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.000956 
    elapsed time: 0.674513 
    elapsed time: 0.998876 
    elapsed time: 1.332279 
    elapsed time: 1.657547 
    elapsed time: 1.982258 
    elapsed time: 2.303388 
    elapsed time: 2.644382 
    elapsed time: 2.963860 
    elapsed time: 3.281065 
    elapsed time: 3.604544 
    elapsed time: 3.943269 
    elapsed time: 4.269392 
    elapsed time: 4.594474 
    elapsed time: 4.932914 
    elapsed time: 5.267628 
    elapsed time: 5.583693 
    elapsed time: 5.914946 
    elapsed time: 6.256936 
    elapsed time: 6.579557 
    elapsed time: 6.910555 
    elapsed time: 7.247253 
    elapsed time: 7.564932 
    elapsed time: 7.900026 
    elapsed time: 8.234202 
    elapsed time: 8.557558 
    elapsed time: 8.883221 
    elapsed time: 9.217690 
    elapsed time: 9.552087 
    elapsed time: 9.876401 
    elapsed time: 10.207381 
    elapsed time: 10.538148 
    elapsed time: 10.862722 
    elapsed time: 11.183361 
    elapsed time: 11.517728 
    elapsed time: 11.851697 
    elapsed time: 12.177576 
    elapsed time: 12.508838 
    elapsed time: 12.851833 
    elapsed time: 13.171617 
    elapsed time: 13.491509 
    elapsed time: 13.824950 
    elapsed time: 14.150789 
    elapsed time: 14.471663 
    elapsed time: 14.797107 
    elapsed time: 15.139333 
    elapsed time: 15.460693 
    elapsed time: 15.789022 
    elapsed time: 16.125915 
    elapsed time: 16.449929 
    elapsed time: 16.772153 
    elapsed time: 17.097745 
    elapsed time: 17.436728 
    elapsed time: 17.755532 
    elapsed time: 18.074857 
    elapsed time: 18.411332 
    elapsed time: 18.745798 
    elapsed time: 19.064009 
    elapsed time: 19.384457 
    elapsed time: 19.723159 
    elapsed time: 20.047401 
    Running CD - Anderson
    elapsed time: 0.000669 
    elapsed time: 0.340604 
    elapsed time: 0.675865 
    elapsed time: 1.047769 
    elapsed time: 1.376106 
    elapsed time: 1.705212 
    elapsed time: 2.043793 
    elapsed time: 2.378543 
    elapsed time: 2.701109 
    elapsed time: 3.041091 
    elapsed time: 3.382578 
    elapsed time: 3.702352 
    elapsed time: 4.043539 
    elapsed time: 4.379032 
    elapsed time: 4.706043 
    elapsed time: 5.048048 
    elapsed time: 5.368974 
    elapsed time: 5.692669 
    elapsed time: 6.030901 
    elapsed time: 6.361041 
    elapsed time: 6.686783 
    elapsed time: 7.015759 
    elapsed time: 7.343972 
    elapsed time: 7.656414 
    elapsed time: 7.974138 
    elapsed time: 8.300370 
    elapsed time: 8.615217 
    elapsed time: 8.951745 
    elapsed time: 9.268228 
    elapsed time: 9.592896 
    elapsed time: 9.931907 
    elapsed time: 10.262722 
    elapsed time: 10.592517 
    elapsed time: 10.937367 
    elapsed time: 11.261837 
    elapsed time: 11.574843 
    elapsed time: 11.879827 
    elapsed time: 12.176675 
    elapsed time: 12.483731 
    elapsed time: 12.790509 
    elapsed time: 13.102185 
    elapsed time: 13.439162 
    elapsed time: 13.778077 
    elapsed time: 14.096369 
    elapsed time: 14.430798 
    elapsed time: 14.780439 
    elapsed time: 15.112875 
    elapsed time: 15.454865 
    elapsed time: 15.783952 
    elapsed time: 16.107959 
    elapsed time: 16.454559 
    elapsed time: 16.789657 
    elapsed time: 17.118245 
    elapsed time: 17.463336 
    elapsed time: 17.790285 
    elapsed time: 18.110647 
    elapsed time: 18.458070 
    elapsed time: 18.788948 
    elapsed time: 19.110906 
    elapsed time: 19.454933 
    elapsed time: 19.785383 
    elapsed time: 20.108692 
    Running CD sym
    elapsed time: 0.000730 
    elapsed time: 0.646471 
    elapsed time: 1.302322 
    elapsed time: 1.937310 
    elapsed time: 2.601790 
    elapsed time: 3.243821 
    elapsed time: 3.898529 
    elapsed time: 4.529614 
    elapsed time: 5.181536 
    elapsed time: 5.824052 
    elapsed time: 6.481079 
    elapsed time: 7.122133 
    elapsed time: 7.775519 
    elapsed time: 8.421071 
    elapsed time: 9.077327 
    elapsed time: 9.717937 
    elapsed time: 10.352930 
    elapsed time: 11.018438 
    elapsed time: 11.682093 
    elapsed time: 12.316965 
    elapsed time: 12.951801 
    elapsed time: 13.611398 
    elapsed time: 14.260307 
    elapsed time: 14.910722 
    elapsed time: 15.554136 
    elapsed time: 16.204528 
    elapsed time: 16.848119 
    elapsed time: 17.513226 
    elapsed time: 18.165951 
    elapsed time: 18.827751 
    elapsed time: 19.492321 
    elapsed time: 20.140147 
    Running CD sym - Anderson
    elapsed time: 0.000678 
    elapsed time: 0.690257 
    elapsed time: 1.378390 
    elapsed time: 2.053684 
    elapsed time: 2.745336 
    elapsed time: 3.408991 
    elapsed time: 4.073539 
    elapsed time: 4.723458 
    elapsed time: 5.397020 
    elapsed time: 6.077447 
    elapsed time: 6.708436 
    elapsed time: 7.363543 
    elapsed time: 7.989585 
    elapsed time: 8.653221 
    elapsed time: 9.301067 
    elapsed time: 9.971460 
    elapsed time: 10.612601 
    elapsed time: 11.291994 
    elapsed time: 11.980055 
    elapsed time: 12.678058 
    elapsed time: 13.337051 
    elapsed time: 14.022572 
    elapsed time: 14.709513 
    elapsed time: 15.400837 
    elapsed time: 16.088174 
    elapsed time: 16.772339 
    elapsed time: 17.445892 
    elapsed time: 18.122581 
    elapsed time: 18.803472 
    elapsed time: 19.484574 
    elapsed time: 20.151906 
    Running RCD
    elapsed time: 0.000642 
    elapsed time: 0.346902 
    elapsed time: 0.693901 
    elapsed time: 1.025676 
    elapsed time: 1.370025 
    elapsed time: 1.702522 
    elapsed time: 2.040482 
    elapsed time: 2.383936 
    elapsed time: 2.712277 
    elapsed time: 3.047640 
    elapsed time: 3.393815 
    elapsed time: 3.713180 
    elapsed time: 4.053212 
    elapsed time: 4.390518 
    elapsed time: 4.721998 
    elapsed time: 5.085635 
    elapsed time: 5.420379 
    elapsed time: 5.770344 
    elapsed time: 6.105485 
    elapsed time: 6.440261 
    elapsed time: 6.786715 
    elapsed time: 7.116901 
    elapsed time: 7.473217 
    elapsed time: 7.811185 
    elapsed time: 8.147124 
    elapsed time: 8.496295 
    elapsed time: 8.847962 
    elapsed time: 9.190506 
    elapsed time: 9.526133 
    elapsed time: 9.892129 
    elapsed time: 10.221059 
    elapsed time: 10.561476 
    elapsed time: 10.906711 
    elapsed time: 11.260443 
    elapsed time: 11.599550 
    elapsed time: 11.943393 
    elapsed time: 12.286786 
    elapsed time: 12.614357 
    elapsed time: 12.963168 
    elapsed time: 13.320743 
    elapsed time: 13.692405 
    elapsed time: 14.071250 
    elapsed time: 14.430982 
    elapsed time: 14.789502 
    elapsed time: 15.130970 
    elapsed time: 15.492058 
    elapsed time: 15.864106 
    elapsed time: 16.241871 
    elapsed time: 16.611626 
    elapsed time: 16.999408 
    elapsed time: 17.471893 
    elapsed time: 17.887992 
    elapsed time: 18.317188 
    elapsed time: 18.765594 
    elapsed time: 19.172299 
    elapsed time: 19.558177 
    elapsed time: 19.930410 
    elapsed time: 20.316376 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  12.575 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
