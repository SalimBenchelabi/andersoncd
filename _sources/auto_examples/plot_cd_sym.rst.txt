
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.000779 
    elapsed time: 0.550995 
    elapsed time: 0.819561 
    elapsed time: 1.095169 
    elapsed time: 1.355220 
    elapsed time: 1.668468 
    elapsed time: 1.961348 
    elapsed time: 2.249429 
    elapsed time: 2.535556 
    elapsed time: 2.814753 
    elapsed time: 3.092827 
    elapsed time: 3.385822 
    elapsed time: 3.672118 
    elapsed time: 3.946863 
    elapsed time: 4.229132 
    elapsed time: 4.496864 
    elapsed time: 4.782895 
    elapsed time: 5.042531 
    elapsed time: 5.308555 
    elapsed time: 5.567304 
    elapsed time: 5.835521 
    elapsed time: 6.096952 
    elapsed time: 6.359186 
    elapsed time: 6.629775 
    elapsed time: 6.899314 
    elapsed time: 7.215700 
    elapsed time: 7.475302 
    elapsed time: 7.741638 
    elapsed time: 8.021573 
    elapsed time: 8.297777 
    elapsed time: 8.579504 
    elapsed time: 8.869132 
    elapsed time: 9.139780 
    elapsed time: 9.420872 
    elapsed time: 9.691733 
    elapsed time: 9.984797 
    elapsed time: 10.264720 
    elapsed time: 10.547529 
    elapsed time: 10.841018 
    elapsed time: 11.126979 
    elapsed time: 11.414448 
    elapsed time: 11.689591 
    elapsed time: 11.989635 
    elapsed time: 12.264374 
    elapsed time: 12.566369 
    elapsed time: 12.849226 
    elapsed time: 13.142692 
    elapsed time: 13.414090 
    elapsed time: 13.687326 
    elapsed time: 13.979233 
    elapsed time: 14.258083 
    elapsed time: 14.532713 
    elapsed time: 14.814275 
    elapsed time: 15.099482 
    elapsed time: 15.390449 
    elapsed time: 15.670720 
    elapsed time: 15.949357 
    elapsed time: 16.226972 
    elapsed time: 16.501040 
    elapsed time: 16.782085 
    elapsed time: 17.071427 
    elapsed time: 17.351815 
    elapsed time: 17.634109 
    elapsed time: 17.916907 
    elapsed time: 18.200638 
    elapsed time: 18.469122 
    elapsed time: 18.741596 
    elapsed time: 19.021910 
    elapsed time: 19.303472 
    elapsed time: 19.580122 
    elapsed time: 19.865020 
    elapsed time: 20.150056 
    Running CD - Anderson
    elapsed time: 0.000690 
    elapsed time: 0.302885 
    elapsed time: 0.603389 
    elapsed time: 0.879946 
    elapsed time: 1.168461 
    elapsed time: 1.450099 
    elapsed time: 1.716932 
    elapsed time: 1.980487 
    elapsed time: 2.245711 
    elapsed time: 2.510748 
    elapsed time: 2.770502 
    elapsed time: 3.035229 
    elapsed time: 3.305603 
    elapsed time: 3.583838 
    elapsed time: 3.849529 
    elapsed time: 4.113571 
    elapsed time: 4.373102 
    elapsed time: 4.636690 
    elapsed time: 4.900290 
    elapsed time: 5.161140 
    elapsed time: 5.427045 
    elapsed time: 5.695707 
    elapsed time: 5.958685 
    elapsed time: 6.226548 
    elapsed time: 6.505046 
    elapsed time: 6.792882 
    elapsed time: 7.081787 
    elapsed time: 7.364087 
    elapsed time: 7.628470 
    elapsed time: 7.907914 
    elapsed time: 8.178889 
    elapsed time: 8.452653 
    elapsed time: 8.731361 
    elapsed time: 9.033068 
    elapsed time: 9.340829 
    elapsed time: 9.633911 
    elapsed time: 9.926142 
    elapsed time: 10.221133 
    elapsed time: 10.490403 
    elapsed time: 10.763765 
    elapsed time: 11.023845 
    elapsed time: 11.288166 
    elapsed time: 11.551904 
    elapsed time: 11.812181 
    elapsed time: 12.078260 
    elapsed time: 12.346811 
    elapsed time: 12.625982 
    elapsed time: 12.893902 
    elapsed time: 13.184003 
    elapsed time: 13.450572 
    elapsed time: 13.721174 
    elapsed time: 13.989275 
    elapsed time: 14.261608 
    elapsed time: 14.546811 
    elapsed time: 14.810939 
    elapsed time: 15.073024 
    elapsed time: 15.339637 
    elapsed time: 15.617444 
    elapsed time: 15.899518 
    elapsed time: 16.205649 
    elapsed time: 16.487612 
    elapsed time: 16.791226 
    elapsed time: 17.085959 
    elapsed time: 17.384296 
    elapsed time: 17.646053 
    elapsed time: 17.926785 
    elapsed time: 18.200553 
    elapsed time: 18.466976 
    elapsed time: 18.751468 
    elapsed time: 19.042619 
    elapsed time: 19.331602 
    elapsed time: 19.611389 
    elapsed time: 19.889064 
    elapsed time: 20.186435 
    Running CD sym
    elapsed time: 0.000700 
    elapsed time: 0.552585 
    elapsed time: 1.091261 
    elapsed time: 1.640513 
    elapsed time: 2.194370 
    elapsed time: 2.739028 
    elapsed time: 3.292257 
    elapsed time: 3.857825 
    elapsed time: 4.426892 
    elapsed time: 4.988025 
    elapsed time: 5.555837 
    elapsed time: 6.110620 
    elapsed time: 6.643931 
    elapsed time: 7.187206 
    elapsed time: 7.732676 
    elapsed time: 8.302894 
    elapsed time: 8.858282 
    elapsed time: 9.398271 
    elapsed time: 9.970799 
    elapsed time: 10.512574 
    elapsed time: 11.034788 
    elapsed time: 11.556557 
    elapsed time: 12.075316 
    elapsed time: 12.589831 
    elapsed time: 13.104735 
    elapsed time: 13.619953 
    elapsed time: 14.140445 
    elapsed time: 14.659689 
    elapsed time: 15.181827 
    elapsed time: 15.716948 
    elapsed time: 16.282432 
    elapsed time: 16.854572 
    elapsed time: 17.401804 
    elapsed time: 17.946159 
    elapsed time: 18.472447 
    elapsed time: 19.003985 
    elapsed time: 19.519278 
    elapsed time: 20.057133 
    Running CD sym - Anderson
    elapsed time: 0.000722 
    elapsed time: 0.537361 
    elapsed time: 1.076901 
    elapsed time: 1.613198 
    elapsed time: 2.193205 
    elapsed time: 2.777957 
    elapsed time: 3.356406 
    elapsed time: 3.923480 
    elapsed time: 4.475284 
    elapsed time: 5.045292 
    elapsed time: 5.568542 
    elapsed time: 6.104914 
    elapsed time: 6.646080 
    elapsed time: 7.206208 
    elapsed time: 7.748705 
    elapsed time: 8.284035 
    elapsed time: 8.808907 
    elapsed time: 9.363060 
    elapsed time: 9.901853 
    elapsed time: 10.438581 
    elapsed time: 10.977668 
    elapsed time: 11.499208 
    elapsed time: 12.014623 
    elapsed time: 12.533234 
    elapsed time: 13.053493 
    elapsed time: 13.594004 
    elapsed time: 14.115118 
    elapsed time: 14.635926 
    elapsed time: 15.161907 
    elapsed time: 15.687383 
    elapsed time: 16.213877 
    elapsed time: 16.748608 
    elapsed time: 17.300693 
    elapsed time: 17.832647 
    elapsed time: 18.354756 
    elapsed time: 18.886368 
    elapsed time: 19.438426 
    elapsed time: 19.982262 
    elapsed time: 20.564772 
    Running RCD
    elapsed time: 0.001087 
    elapsed time: 0.288971 
    elapsed time: 0.578633 
    elapsed time: 0.856179 
    elapsed time: 1.154247 
    elapsed time: 1.439668 
    elapsed time: 1.718235 
    elapsed time: 1.985667 
    elapsed time: 2.250705 
    elapsed time: 2.521070 
    elapsed time: 2.803138 
    elapsed time: 3.081459 
    elapsed time: 3.361094 
    elapsed time: 3.634698 
    elapsed time: 3.916219 
    elapsed time: 4.193820 
    elapsed time: 4.460937 
    elapsed time: 4.730020 
    elapsed time: 5.002535 
    elapsed time: 5.267536 
    elapsed time: 5.532758 
    elapsed time: 5.809787 
    elapsed time: 6.092853 
    elapsed time: 6.366412 
    elapsed time: 6.628489 
    elapsed time: 6.914578 
    elapsed time: 7.204233 
    elapsed time: 7.505641 
    elapsed time: 7.799241 
    elapsed time: 8.094213 
    elapsed time: 8.399662 
    elapsed time: 8.700473 
    elapsed time: 9.002837 
    elapsed time: 9.277489 
    elapsed time: 9.557305 
    elapsed time: 9.821826 
    elapsed time: 10.110581 
    elapsed time: 10.380454 
    elapsed time: 10.649603 
    elapsed time: 10.924392 
    elapsed time: 11.219027 
    elapsed time: 11.492320 
    elapsed time: 11.762938 
    elapsed time: 12.024348 
    elapsed time: 12.290586 
    elapsed time: 12.550810 
    elapsed time: 12.822302 
    elapsed time: 13.084853 
    elapsed time: 13.342156 
    elapsed time: 13.606112 
    elapsed time: 13.869196 
    elapsed time: 14.129534 
    elapsed time: 14.390849 
    elapsed time: 14.655902 
    elapsed time: 14.925291 
    elapsed time: 15.214593 
    elapsed time: 15.498377 
    elapsed time: 15.778788 
    elapsed time: 16.054526 
    elapsed time: 16.340898 
    elapsed time: 16.608993 
    elapsed time: 16.875847 
    elapsed time: 17.148448 
    elapsed time: 17.426793 
    elapsed time: 17.706151 
    elapsed time: 17.985383 
    elapsed time: 18.261251 
    elapsed time: 18.539025 
    elapsed time: 18.843874 
    elapsed time: 19.129945 
    elapsed time: 19.436387 
    elapsed time: 19.738682 
    elapsed time: 20.025628 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  8.112 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
