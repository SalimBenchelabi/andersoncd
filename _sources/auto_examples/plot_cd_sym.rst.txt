
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.000643 
    elapsed time: 0.536614 
    elapsed time: 0.797016 
    elapsed time: 1.108796 
    elapsed time: 1.407941 
    elapsed time: 1.677835 
    elapsed time: 1.961377 
    elapsed time: 2.255647 
    elapsed time: 2.511696 
    elapsed time: 2.770016 
    elapsed time: 3.078005 
    elapsed time: 3.343627 
    elapsed time: 3.610986 
    elapsed time: 3.878878 
    elapsed time: 4.147342 
    elapsed time: 4.419060 
    elapsed time: 4.685600 
    elapsed time: 4.942557 
    elapsed time: 5.212399 
    elapsed time: 5.527539 
    elapsed time: 5.783600 
    elapsed time: 6.058155 
    elapsed time: 6.329334 
    elapsed time: 6.651239 
    elapsed time: 6.924056 
    elapsed time: 7.214245 
    elapsed time: 7.516632 
    elapsed time: 7.811927 
    elapsed time: 8.126464 
    elapsed time: 8.468670 
    elapsed time: 8.753871 
    elapsed time: 9.019942 
    elapsed time: 9.285402 
    elapsed time: 9.589005 
    elapsed time: 9.873736 
    elapsed time: 10.154410 
    elapsed time: 10.415964 
    elapsed time: 10.695851 
    elapsed time: 10.953840 
    elapsed time: 11.222032 
    elapsed time: 11.488838 
    elapsed time: 11.795635 
    elapsed time: 12.091705 
    elapsed time: 12.401664 
    elapsed time: 12.666753 
    elapsed time: 12.930852 
    elapsed time: 13.186841 
    elapsed time: 13.468764 
    elapsed time: 13.751474 
    elapsed time: 14.031926 
    elapsed time: 14.291598 
    elapsed time: 14.546156 
    elapsed time: 14.827003 
    elapsed time: 15.132749 
    elapsed time: 15.425220 
    elapsed time: 15.710538 
    elapsed time: 15.965346 
    elapsed time: 16.223877 
    elapsed time: 16.483646 
    elapsed time: 16.750089 
    elapsed time: 17.015950 
    elapsed time: 17.290618 
    elapsed time: 17.551912 
    elapsed time: 17.815089 
    elapsed time: 18.069680 
    elapsed time: 18.328148 
    elapsed time: 18.588673 
    elapsed time: 18.841241 
    elapsed time: 19.102645 
    elapsed time: 19.362827 
    elapsed time: 19.622029 
    elapsed time: 19.884802 
    elapsed time: 20.141627 
    Running CD - Anderson
    elapsed time: 0.000637 
    elapsed time: 0.275092 
    elapsed time: 0.542592 
    elapsed time: 0.821738 
    elapsed time: 1.091407 
    elapsed time: 1.384953 
    elapsed time: 1.649152 
    elapsed time: 1.934757 
    elapsed time: 2.200741 
    elapsed time: 2.459239 
    elapsed time: 2.713981 
    elapsed time: 2.973176 
    elapsed time: 3.232490 
    elapsed time: 3.487898 
    elapsed time: 3.745512 
    elapsed time: 4.003376 
    elapsed time: 4.258924 
    elapsed time: 4.521212 
    elapsed time: 4.780168 
    elapsed time: 5.035019 
    elapsed time: 5.311796 
    elapsed time: 5.592164 
    elapsed time: 5.855699 
    elapsed time: 6.116545 
    elapsed time: 6.382048 
    elapsed time: 6.638873 
    elapsed time: 6.898015 
    elapsed time: 7.157701 
    elapsed time: 7.420453 
    elapsed time: 7.684963 
    elapsed time: 7.959635 
    elapsed time: 8.225449 
    elapsed time: 8.490601 
    elapsed time: 8.750386 
    elapsed time: 9.012077 
    elapsed time: 9.273409 
    elapsed time: 9.574610 
    elapsed time: 9.831370 
    elapsed time: 10.099648 
    elapsed time: 10.373374 
    elapsed time: 10.645993 
    elapsed time: 10.937565 
    elapsed time: 11.216482 
    elapsed time: 11.487512 
    elapsed time: 11.769284 
    elapsed time: 12.039838 
    elapsed time: 12.303662 
    elapsed time: 12.574382 
    elapsed time: 12.837203 
    elapsed time: 13.143777 
    elapsed time: 13.439694 
    elapsed time: 13.738864 
    elapsed time: 13.996277 
    elapsed time: 14.267605 
    elapsed time: 14.528635 
    elapsed time: 14.790691 
    elapsed time: 15.048826 
    elapsed time: 15.315981 
    elapsed time: 15.594880 
    elapsed time: 15.879218 
    elapsed time: 16.195273 
    elapsed time: 16.449460 
    elapsed time: 16.729681 
    elapsed time: 17.000737 
    elapsed time: 17.259450 
    elapsed time: 17.538250 
    elapsed time: 17.806359 
    elapsed time: 18.071342 
    elapsed time: 18.332715 
    elapsed time: 18.599374 
    elapsed time: 18.872796 
    elapsed time: 19.157680 
    elapsed time: 19.421160 
    elapsed time: 19.696267 
    elapsed time: 20.015759 
    Running CD sym
    elapsed time: 0.000640 
    elapsed time: 0.532387 
    elapsed time: 1.096170 
    elapsed time: 1.630397 
    elapsed time: 2.146927 
    elapsed time: 2.658495 
    elapsed time: 3.187320 
    elapsed time: 3.726030 
    elapsed time: 4.310877 
    elapsed time: 4.860075 
    elapsed time: 5.389626 
    elapsed time: 5.889876 
    elapsed time: 6.391440 
    elapsed time: 6.904205 
    elapsed time: 7.459686 
    elapsed time: 7.987989 
    elapsed time: 8.524513 
    elapsed time: 9.070345 
    elapsed time: 9.646594 
    elapsed time: 10.205006 
    elapsed time: 10.727153 
    elapsed time: 11.244314 
    elapsed time: 11.747342 
    elapsed time: 12.245850 
    elapsed time: 12.738329 
    elapsed time: 13.231287 
    elapsed time: 13.725571 
    elapsed time: 14.218440 
    elapsed time: 14.712802 
    elapsed time: 15.212745 
    elapsed time: 15.718689 
    elapsed time: 16.228148 
    elapsed time: 16.743053 
    elapsed time: 17.254673 
    elapsed time: 17.874983 
    elapsed time: 18.477619 
    elapsed time: 19.086239 
    elapsed time: 19.697742 
    elapsed time: 20.255658 
    Running CD sym - Anderson
    elapsed time: 0.000682 
    elapsed time: 0.544860 
    elapsed time: 1.173234 
    elapsed time: 1.791183 
    elapsed time: 2.377979 
    elapsed time: 2.928896 
    elapsed time: 3.516897 
    elapsed time: 4.127922 
    elapsed time: 4.713891 
    elapsed time: 5.276936 
    elapsed time: 5.827777 
    elapsed time: 6.431792 
    elapsed time: 6.983133 
    elapsed time: 7.534220 
    elapsed time: 8.068981 
    elapsed time: 8.624883 
    elapsed time: 9.237492 
    elapsed time: 9.917493 
    elapsed time: 10.490496 
    elapsed time: 11.055211 
    elapsed time: 11.628031 
    elapsed time: 12.216016 
    elapsed time: 12.796536 
    elapsed time: 13.358829 
    elapsed time: 13.929879 
    elapsed time: 14.468107 
    elapsed time: 15.066934 
    elapsed time: 15.635825 
    elapsed time: 16.180696 
    elapsed time: 16.758633 
    elapsed time: 17.301737 
    elapsed time: 17.874896 
    elapsed time: 18.470029 
    elapsed time: 19.101071 
    elapsed time: 19.697195 
    elapsed time: 20.231336 
    Running RCD
    elapsed time: 0.000658 
    elapsed time: 0.266983 
    elapsed time: 0.536388 
    elapsed time: 0.786072 
    elapsed time: 1.042051 
    elapsed time: 1.301799 
    elapsed time: 1.564170 
    elapsed time: 1.816302 
    elapsed time: 2.063907 
    elapsed time: 2.311337 
    elapsed time: 2.579801 
    elapsed time: 2.826360 
    elapsed time: 3.075182 
    elapsed time: 3.325673 
    elapsed time: 3.576480 
    elapsed time: 3.833227 
    elapsed time: 4.085038 
    elapsed time: 4.337195 
    elapsed time: 4.597005 
    elapsed time: 4.852024 
    elapsed time: 5.110055 
    elapsed time: 5.364504 
    elapsed time: 5.613821 
    elapsed time: 5.866775 
    elapsed time: 6.163302 
    elapsed time: 6.414886 
    elapsed time: 6.675789 
    elapsed time: 6.965919 
    elapsed time: 7.231859 
    elapsed time: 7.500101 
    elapsed time: 7.756244 
    elapsed time: 8.017602 
    elapsed time: 8.281616 
    elapsed time: 8.554921 
    elapsed time: 8.834966 
    elapsed time: 9.096881 
    elapsed time: 9.401313 
    elapsed time: 9.666303 
    elapsed time: 9.960297 
    elapsed time: 10.226612 
    elapsed time: 10.501681 
    elapsed time: 10.783424 
    elapsed time: 11.072211 
    elapsed time: 11.332717 
    elapsed time: 11.612863 
    elapsed time: 11.891777 
    elapsed time: 12.159287 
    elapsed time: 12.421360 
    elapsed time: 12.677646 
    elapsed time: 12.935737 
    elapsed time: 13.205931 
    elapsed time: 13.465527 
    elapsed time: 13.727833 
    elapsed time: 13.997251 
    elapsed time: 14.256697 
    elapsed time: 14.518141 
    elapsed time: 14.784196 
    elapsed time: 15.042868 
    elapsed time: 15.294496 
    elapsed time: 15.571352 
    elapsed time: 15.844629 
    elapsed time: 16.191927 
    elapsed time: 16.449637 
    elapsed time: 16.736566 
    elapsed time: 17.013951 
    elapsed time: 17.309021 
    elapsed time: 17.576422 
    elapsed time: 17.866896 
    elapsed time: 18.146321 
    elapsed time: 18.426013 
    elapsed time: 18.733067 
    elapsed time: 19.042633 
    elapsed time: 19.356350 
    elapsed time: 19.627630 
    elapsed time: 19.886477 
    elapsed time: 20.196493 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  9.013 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
