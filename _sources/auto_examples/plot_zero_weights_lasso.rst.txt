
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_zero_weights_lasso.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_zero_weights_lasso.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_zero_weights_lasso.py:


=====================================
Weighted Lasso with some zero weights
=====================================

This example demonstrates how to use a weighted lasso with some vanishing
weights. The fast Celer solver is adapted to use primal Anderson acceleration,
allowing it to not compute the dual and handle 0 weights.

.. GENERATED FROM PYTHON SOURCE LINES 10-54



.. image:: /auto_examples/images/sphx_glr_plot_zero_weights_lasso_001.png
    :alt: Estimated coefficients
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    usetex mode requires TeX.
    #########################
    ##### Computing alpha 1/1
    #########################
    KKT max violation: 6.53e+00
    Iteration 0, 20 feats in subpb.
    KKT max violation: 1.84e+00
    Iteration 1, 20 feats in subpb.
    KKT max violation: 1.48e+00
    Iteration 2, 30 feats in subpb.
    KKT max violation: 8.27e-01
    Iteration 3, 54 feats in subpb.
    KKT max violation: 4.22e-01
    Iteration 4, 84 feats in subpb.
    KKT max violation: 8.34e-02
    Iteration 5, 70 feats in subpb.
    KKT max violation: 2.52e-05






|

.. code-block:: default


    import numpy as np
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from sklearn.preprocessing import LabelBinarizer
    from sklearn.datasets import fetch_openml

    from andersoncd import WeightedLasso
    from andersoncd.plot_utils import configure_plt
    from andersoncd.data.synthetic import simu_linreg

    configure_plt(fontsize=14, poster=False)

    dataset = "simu"

    if dataset == "simu":
        n_features = 100
        X, y = simu_linreg(n_samples=100, n_features=n_features, corr=0.9)
    else:
        X, y = fetch_openml("leukemia", return_X_y=True)
        X, y = X.to_numpy(), y.to_numpy()
        n_features = 100
        X /= norm(X, axis=0)
        X = X[:, :n_features]
        y = LabelBinarizer().fit_transform(y)[:, 0].astype(float)

    weights = np.empty(n_features)
    # unpenalize the first 10 features:
    weights[:10] = 0
    # put large penalty on the 10-50 features
    weights[10:50] = 5
    # put small penalty on last 50 features
    weights[50:] = 1

    alpha_max = np.max(np.abs(
        X[:, weights != 0].T @ y / weights[weights != 0])) / len(y)
    clf = WeightedLasso(alpha=alpha_max/30, weights=weights,
                        fit_intercept=False, verbose=1).fit(X, y)


    plt.figure(figsize=(5, 4))
    plt.stem(clf.coef_)
    plt.title("Estimated coefficients")
    plt.show(block=False)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.436 seconds)


.. _sphx_glr_download_auto_examples_plot_zero_weights_lasso.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_zero_weights_lasso.py <plot_zero_weights_lasso.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_zero_weights_lasso.ipynb <plot_zero_weights_lasso.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
